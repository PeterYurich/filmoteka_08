{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAGA,MAAMC,EAAUC,SAASC,cAAc,YACjCC,EAAQF,SAASC,cAAc,UAErCE,eAAeC,IACX,IAAIC,EAAmBC,aAAaC,QAAQ,WAErCF,EADFA,EACqBG,KAAKC,MAAMJ,GADO,GAG5C,IACI,MACMK,SADsB,EAAAC,EAAAC,wBAAuBP,IACtBQ,KAAIC,IACtB,EAAAjB,EAAAkB,eAAcD,KACtBE,KAAK,IAEFC,EAAqBjB,SAASC,cAAc,cAClDgB,EAAmBC,UAAYR,EAC/B,MAAMS,EAAUnB,SAASC,cAAc,oBACnCgB,EAAmBG,kBAAoB,GACvCD,EAAQE,UAAUC,IAAI,Y,CAE5B,MAAOC,GACLC,QAAQC,IAAIF,E,EAIpBpB,eAAeuB,IACX,IAAIC,EAAkBrB,aAAaC,QAAQ,SAEpCoB,EADFA,EACoBnB,KAAKC,MAAMkB,GADM,GAG1C,IACI,MACMjB,SADsB,EAAAC,EAAAC,wBAAuBe,IACtBd,KAAIC,IACtB,EAAAjB,EAAAkB,eAAcD,KACtBE,KAAK,IAEFC,EAAqBjB,SAASC,cAAc,cAClDgB,EAAmBC,UAAYR,EAC/B,MAAMS,EAAUnB,SAASC,cAAc,oBACnCgB,EAAmBG,kBAAoB,GACvCD,EAAQE,UAAUC,IAAI,Y,CAE5B,MAAOC,GACLC,QAAQC,IAAIF,E,EAIpB,SAASK,IACL7B,EAAQsB,UAAUQ,OAAO,cACzB3B,EAAMmB,UAAUC,IAAI,cACpBI,G,CASJE,IACA7B,EAAQ+B,iBAAiB,SAPzB,WACI/B,EAAQsB,UAAUC,IAAI,cACtBpB,EAAMmB,UAAUQ,OAAO,cACvBzB,G,IAKJF,EAAM4B,iBAAiB,QAASF,G,WC9DhC,MAAMG,EAAO,CACTC,aAAchC,SAASC,cAAc,qBACrCgC,cAAejC,SAASC,cAAc,sBACtCiC,MAAOlC,SAASC,cAAc,gBAC9BkC,KAAMnC,SAASC,cAAc,SAYjC,SAASmC,KAG4E,GAFvEC,OAAOC,SAASC,KAElBC,QAAQ,+DACZH,OAAOC,SAASG,QAAO,GAE3BV,EAAKI,KAAKd,UAAUQ,OAAO,YAC3BQ,OAAOK,oBAAoB,UAAWC,GACtCZ,EAAKG,MAAMb,UAAUC,IAAI,aAOzB,IADatB,SAASC,cAAc,WACzB,CACP,MAAM2C,EAAU5C,SAASC,cAAc,YACjC4C,EAAQ7C,SAASC,cAAc,UAEjC2C,EAAQvB,UAAUyB,SAAS,gBAC3BtB,QAAQC,IAAI,SACZrB,KAEAyC,EAAMxB,UAAUyB,SAAS,gBACzBtB,QAAQC,IAAI,SACZC,I,EAWZ,SAASiB,EAAWI,GACF,WAAVA,EAAEC,KACFZ,G,CA/CRL,EAAKG,MAAMJ,iBAAiB,SAuC5B,SAAyBiB,GACjBA,EAAEE,gBAAkBF,EAAEG,QACtBd,G,IAxCRC,OAAOP,iBAAiB,UAAWa,G","sources":["src/js/get-content/my-lib-btn-clicks.js","src/js/modal-windows/open-close-my_lib-movie-modal.js"],"sourcesContent":["import { oneCardMarkup } from '../components/one-card-markup'\nimport { getTheMoviesTargetInfo } from \"./get-movies-target-info\"\n\nconst watched = document.querySelector('#watched')\nconst queue = document.querySelector('#queue')\n\nasync function loadWatchedMovies() {\n    let watchedMoviesIds = localStorage.getItem(\"watched\")\n    if (!watchedMoviesIds) { watchedMoviesIds = {} }\n    else { watchedMoviesIds = JSON.parse(watchedMoviesIds) }\n\n    try {\n        const filmsToRender = await getTheMoviesTargetInfo(watchedMoviesIds)\n        const markup = filmsToRender.map(film => {\n            return oneCardMarkup(film)\n        }).join('');\n\n        const containerMyLibPage = document.querySelector('.film-grid');\n        containerMyLibPage.innerHTML = markup\n        const message = document.querySelector('.message-wrapper')\n        if (containerMyLibPage.childElementCount > 0) {\n            message.classList.add('hide-load');\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nasync function loadQueuedMovies() {    \n    let queuedMoviesIds = localStorage.getItem(\"queue\")\n    if (!queuedMoviesIds) { queuedMoviesIds = {} }\n    else { queuedMoviesIds = JSON.parse(queuedMoviesIds) }\n\n    try {\n        const filmsToRender = await getTheMoviesTargetInfo(queuedMoviesIds)\n        const markup = filmsToRender.map(film => {\n            return oneCardMarkup(film)\n        }).join('');\n\n        const containerMyLibPage = document.querySelector('.film-grid');\n        containerMyLibPage.innerHTML = markup\n        const message = document.querySelector('.message-wrapper')\n        if (containerMyLibPage.childElementCount > 0) {\n            message.classList.add('hide-load');\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nfunction onQueue () {\n    watched.classList.remove('active-btn')\n    queue.classList.add('active-btn')\n    loadQueuedMovies()\n}\n\nfunction onWatched () {\n    watched.classList.add('active-btn')\n    queue.classList.remove('active-btn')\n    loadWatchedMovies()\n}\n\nonQueue()\nwatched.addEventListener('click', onWatched)\nqueue.addEventListener('click', onQueue)\n\nexport { loadQueuedMovies, loadWatchedMovies, }","import { loadWatchedMovies, loadQueuedMovies } from \"../get-content/my-lib-btn-clicks\";\n\nconst refs = {\n    openModalBtn: document.querySelector('[data-modal-open]'),\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n    body: document.querySelector('body'),\n};\n\nrefs.modal.addEventListener('click', onBackdropClick);\nwindow.addEventListener('keydown', onEscClose);\n\nfunction showModalMovieWindow() {\n    refs.body.classList.add('overflow');\n    window.addEventListener('keydown', onEscClose);\n    refs.modal.classList.remove('is-hidden');\n}\n\nfunction hideModalMovieWindow() {\n    let url = window.location.href;\n    if (\n        url.indexOf('https://peteryurich.github.io/filmoteka_08/my_library.html') != -1) {\n        window.location.reload(true);\n    }\n    refs.body.classList.remove('overflow');\n    window.removeEventListener('keydown', onEscClose);\n    refs.modal.classList.add('is-hidden');\n\n    // if (url.indexOf('http://localhost:1234/my_library.html') != -1) {\n    //   window.location.reload(true);\n    // }\n\n    const form = document.querySelector(\".search\")\n    if (!form) {\n        const watched = document.querySelector('#watched')\n        const queue = document.querySelector('#queue')\n\n        if (watched.classList.contains(\"active-btn\")) {\n            console.log(\"watch\")\n            loadWatchedMovies()\n        }\n        if (queue.classList.contains(\"active-btn\")) {\n            console.log(\"wueue\")\n            loadQueuedMovies()\n        }\n    }\n}\n\nfunction onBackdropClick(e) {\n    if (e.currentTarget === e.target) {\n        hideModalMovieWindow();\n    }\n}\n\nfunction onEscClose(e) {\n    if (e.key === 'Escape') {\n        hideModalMovieWindow();\n    }\n}\n\nexport { showModalMovieWindow, hideModalMovieWindow }"],"names":["$cYe4m","parcelRequire","$76e6355badd32eef$var$watched","document","querySelector","$76e6355badd32eef$var$queue","async","$76e6355badd32eef$export$f99fab56a46c62ee","watchedMoviesIds","localStorage","getItem","JSON","parse","markup","$bZlYx","getTheMoviesTargetInfo","map","film","oneCardMarkup","join","containerMyLibPage","innerHTML","message","childElementCount","classList","add","error","console","log","$76e6355badd32eef$export$1c35a62a60101ee","queuedMoviesIds","$76e6355badd32eef$var$onQueue","remove","addEventListener","$c19d99f10edacd4f$var$refs","openModalBtn","closeModalBtn","modal","body","$c19d99f10edacd4f$export$cc81713dc4c30e0c","window","location","href","indexOf","reload","removeEventListener","$c19d99f10edacd4f$var$onEscClose","watched","queue","contains","e","key","currentTarget","target"],"version":3,"file":"my_library.5618ffdc.js.map"}