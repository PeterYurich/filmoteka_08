{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uCAGMC,EAAUC,SAASC,cAAc,YACjCC,EAAQF,SAASC,cAAc,U,SAKtBE,I,OAAAA,EAAfC,EAAAP,EAAA,CAAAO,EAAAC,GAAAC,MAAA,SAAAC,I,IACQC,EAKMC,EACAC,E,yEAJHF,GAFHA,EAAmBG,aAAaC,QAAQ,YAElBC,KAAKC,MAAMN,GADO,G,mBAIZ,EAAAO,EAAAC,wBAAuBR,G,cAA7CC,EAAaQ,EAAAC,K,SACET,EAAcU,KAAI,SAAAC,GACnC,OAAO,EAAAC,EAAAC,eAAcF,E,IACtBG,KAAK,I,OAFFb,EAAMO,EAAAC,KAIelB,SAASC,cAAc,cAC/BuB,UAAYd,E,kDAE/Be,QAAQC,IAAGT,EAAAU,I,2DAdaC,MAAAC,KAAAC,U,UAkBjBC,I,OAAAA,EAAf3B,EAAAP,EAAA,CAAAO,EAAAC,GAAAC,MAAA,SAAAC,I,IACQyB,EAKMvB,EACAC,E,yEAJHsB,GAFHA,EAAkBrB,aAAaC,QAAQ,UAElBC,KAAKC,MAAMkB,GADM,G,mBAIV,EAAAjB,EAAAC,wBAAuBgB,G,cAA7CvB,EAAaQ,EAAAC,K,SACET,EAAcU,KAAI,SAAAC,GACnC,OAAO,EAAAC,EAAAC,eAAcF,E,IACtBG,KAAK,I,OAFFb,EAAMO,EAAAC,KAIelB,SAASC,cAAc,cAC/BuB,UAAYd,E,kDAE/Be,QAAQC,IAAGT,EAAAU,I,2DAdYC,MAAAC,KAAAC,U,CArB/B/B,EAAQkC,iBAAiB,S,kBAGV9B,EAAiByB,MAAAC,KAAAC,U,IAFhC5B,EAAM+B,iBAAiB,S,kBAoBRF,EAAgBH,MAAAC,KAAAC,U","sources":["src/js/my-lib-btn-clicks.js"],"sourcesContent":["import { oneCardMarkup } from './one-card-markup'\nimport { getTheMoviesTargetInfo } from \"./get-movies-target-info\"\n\nconst watched = document.querySelector('#watched')\nconst queue = document.querySelector('#queue')\n\nwatched.addEventListener('click', loadWatchedMovies)\nqueue.addEventListener('click', loadQueuedMovies)\n\nasync function loadWatchedMovies() {\n    let watchedMoviesIds = localStorage.getItem(\"watched\")\n    if (!watchedMoviesIds) { watchedMoviesIds = {} }\n    else { watchedMoviesIds = JSON.parse(watchedMoviesIds) }\n\n    try {\n        const filmsToRender = await getTheMoviesTargetInfo(watchedMoviesIds)\n        const markup = await filmsToRender.map(film => {\n            return oneCardMarkup(film)\n        }).join('');\n\n        const containerMyLibPage = document.querySelector('.film-grid');\n        containerMyLibPage.innerHTML = markup\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nasync function loadQueuedMovies() {\n    let queuedMoviesIds = localStorage.getItem(\"queue\")\n    if (!queuedMoviesIds) { queuedMoviesIds = {} }\n    else { queuedMoviesIds = JSON.parse(queuedMoviesIds) }\n\n    try {\n        const filmsToRender = await getTheMoviesTargetInfo(queuedMoviesIds)\n        const markup = await filmsToRender.map(film => {\n            return oneCardMarkup(film)\n        }).join('');\n\n        const containerMyLibPage = document.querySelector('.film-grid');\n        containerMyLibPage.innerHTML = markup\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n// function loadQueuedMovies(e) {\n//     e.preventDefault()\n//     let getQueueFilm = localStorage.getItem(\"watched\")\n//     if (!getQueueFilm) {\n//         getQueueFilm = {}\n//     }\n//     else { getQueueFilm = JSON.parse(getQueueFilm) }\n\n//     async function loadQueue() {\n\n//         try {\n//             const foundMoviesIds = getQueueFilm.map(film => film.id)\n//             const FilmsToRender = await getTheMoviesTargetInfo(foundMoviesIds)\n\n//             const markup = await FilmsToRender.map(film => {\n//                 return oneCardMarkup(film)\n//             }).join('');\n\n//             const containerMyLibPage = document.querySelector('.my-lib_film-grid');\n//             containerMyLibPage.innerHTML = markup\n//         } catch (error) {\n//             console.log(error)\n//         }\n//     }\n//     loadQueue()\n// }"],"names":["$bpxeT","parcelRequire","$347f10ea31f3395a$var$watched","document","querySelector","$347f10ea31f3395a$var$queue","$347f10ea31f3395a$var$_loadWatchedMovies","$parcel$interopDefault","$2TvXO","mark","_callee","watchedMoviesIds","filmsToRender","markup","localStorage","getItem","JSON","parse","$eVfoQ","getTheMoviesTargetInfo","_ctx","sent","map","film","$fl036","oneCardMarkup","join","innerHTML","console","log","t0","apply","this","arguments","$347f10ea31f3395a$var$_loadQueuedMovies","queuedMoviesIds","addEventListener"],"version":3,"file":"my_library.35719289.js.map"}