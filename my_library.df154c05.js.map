{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uCAGMC,EAAUC,SAASC,cAAc,YACjCC,EAAQF,SAASC,cAAc,U,SAMtBE,I,OAAAA,EAAfC,EAAAP,EAAA,CAAAO,EAAAC,GAAAC,MAAA,SAAAC,I,IACQC,EAKMC,EACAC,E,yEAJHF,GAFHA,EAAmBG,aAAaC,QAAQ,YAElBC,KAAKC,MAAMN,GADO,G,mBAIZ,EAAAO,EAAAC,wBAAuBR,G,OAA7CC,EAAaQ,EAAAC,KACbR,EAASD,EAAcU,KAAI,SAAAC,GAC7B,OAAO,EAAAC,EAAAC,eAAcF,E,IACtBG,KAAK,IAEmBvB,SAASC,cAAc,cAC/BuB,UAAYd,E,kDAE/Be,QAAQC,IAAGT,EAAAU,I,QAEf5B,EAAQ6B,UAAUC,IAAI,cACtB3B,EAAM0B,UAAUE,OAAO,c,2DAjBKC,MAAAC,KAAAC,U,UAoBjBC,I,OAAAC,EAAgBJ,MAAAC,KAAAC,U,UAAhBE,I,OAAAA,EAAf/B,EAAAP,EAAA,CAAAO,EAAAC,GAAAC,MAAA,SAAAC,I,IACQ6B,EAKM3B,EACAC,E,yEAJH0B,GAFHA,EAAkBzB,aAAaC,QAAQ,UAElBC,KAAKC,MAAMsB,GADM,G,mBAIV,EAAArB,EAAAC,wBAAuBoB,G,OAA7C3B,EAAaQ,EAAAC,KACbR,EAASD,EAAcU,KAAI,SAAAC,GAC7B,OAAO,EAAAC,EAAAC,eAAcF,E,IACtBG,KAAK,IAEmBvB,SAASC,cAAc,cAC/BuB,UAAYd,E,kDAE/Be,QAAQC,IAAGT,EAAAU,I,QAEf5B,EAAQ6B,UAAUE,OAAO,cACzB5B,EAAM0B,UAAUC,IAAI,c,2DAjBOE,MAAAC,KAAAC,U,CAvB/BlC,EAAQsC,iBAAiB,S,kBAGVlC,EAAiB4B,MAAAC,KAAAC,U,IAFhC/B,EAAMmC,iBAAiB,QAASH,GAyChCA,I","sources":["src/js/get-content/my-lib-btn-clicks.js"],"sourcesContent":["import { oneCardMarkup } from '../components/one-card-markup'\nimport { getTheMoviesTargetInfo } from \"./get-movies-target-info\"\n\nconst watched = document.querySelector('#watched')\nconst queue = document.querySelector('#queue')\n\n\nwatched.addEventListener('click', loadWatchedMovies)\nqueue.addEventListener('click', loadQueuedMovies)\n\nasync function loadWatchedMovies() {\n    let watchedMoviesIds = localStorage.getItem(\"watched\")\n    if (!watchedMoviesIds) { watchedMoviesIds = {} }\n    else { watchedMoviesIds = JSON.parse(watchedMoviesIds) }\n\n    try {\n        const filmsToRender = await getTheMoviesTargetInfo(watchedMoviesIds)\n        const markup = filmsToRender.map(film => {\n            return oneCardMarkup(film)\n        }).join('');\n\n        const containerMyLibPage = document.querySelector('.film-grid');\n        containerMyLibPage.innerHTML = markup\n    } catch (error) {\n        console.log(error)\n    }\n    watched.classList.add('active-btn')\n    queue.classList.remove('active-btn')\n}\n\nasync function loadQueuedMovies() {\n    let queuedMoviesIds = localStorage.getItem(\"queue\")\n    if (!queuedMoviesIds) { queuedMoviesIds = {} }\n    else { queuedMoviesIds = JSON.parse(queuedMoviesIds) }\n\n    try {\n        const filmsToRender = await getTheMoviesTargetInfo(queuedMoviesIds)\n        const markup = filmsToRender.map(film => {\n            return oneCardMarkup(film)\n        }).join('');\n\n        const containerMyLibPage = document.querySelector('.film-grid');\n        containerMyLibPage.innerHTML = markup\n    } catch (error) {\n        console.log(error)\n    }\n    watched.classList.remove('active-btn')\n    queue.classList.add('active-btn')\n}\nloadQueuedMovies()\n\n// export { loadQueuedMovies, loadWatchedMovies }"],"names":["$bpxeT","parcelRequire","$bcabdb5f54ab5d52$var$watched","document","querySelector","$bcabdb5f54ab5d52$var$queue","$bcabdb5f54ab5d52$var$_loadWatchedMovies","$parcel$interopDefault","$2TvXO","mark","_callee","watchedMoviesIds","filmsToRender","markup","localStorage","getItem","JSON","parse","$8VB7B","getTheMoviesTargetInfo","_ctx","sent","map","film","$cGXL9","oneCardMarkup","join","innerHTML","console","log","t0","classList","add","remove","apply","this","arguments","$bcabdb5f54ab5d52$var$loadQueuedMovies","$bcabdb5f54ab5d52$var$_loadQueuedMovies","queuedMoviesIds","addEventListener"],"version":3,"file":"my_library.df154c05.js.map"}