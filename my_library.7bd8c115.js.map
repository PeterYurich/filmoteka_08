{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uCAGMC,EAAUC,SAASC,cAAc,YACjCC,EAAQF,SAASC,cAAc,U,SAEtBE,I,OAAAC,EAAiBC,MAAAC,KAAAC,U,UAAjBH,I,OAAAA,EAAfI,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,I,IACQC,EAKMC,EACAC,EAIAC,EAEAC,E,yEAVHJ,GAFHA,EAAmBK,aAAaC,QAAQ,YAElBC,KAAKC,MAAMR,GADO,G,mBAIZ,EAAAS,EAAAC,wBAAuBV,G,OAA7CC,EAAaU,EAAAC,KACbV,EAASD,EAAcY,KAAI,SAAAC,GAC7B,OAAO,EAAAC,EAAAC,eAAcF,E,IACtBG,KAAK,KAEFd,EAAqBf,SAASC,cAAc,eAC/B6B,UAAYhB,EACzBE,EAAUhB,SAASC,cAAc,oBACnCc,EAAmBgB,kBAAoB,GACvCf,EAAQgB,UAAUC,IAAI,a,kDAI1BC,QAAQC,IAAGZ,EAAAa,I,2DAnBa/B,MAAAC,KAAAC,U,UAuBjB8B,I,OAAAC,EAAgBjC,MAAAC,KAAAC,U,UAAhB+B,I,OAAAA,EAAf9B,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,I,IACQ4B,EAKM1B,EACAC,EAIAC,EAEAC,E,yEAVHuB,GAFHA,EAAkBtB,aAAaC,QAAQ,UAElBC,KAAKC,MAAMmB,GADM,G,mBAIV,EAAAlB,EAAAC,wBAAuBiB,G,OAA7C1B,EAAaU,EAAAC,KACbV,EAASD,EAAcY,KAAI,SAAAC,GAC7B,OAAO,EAAAC,EAAAC,eAAcF,E,IACtBG,KAAK,KAEFd,EAAqBf,SAASC,cAAc,eAC/B6B,UAAYhB,EACzBE,EAAUhB,SAASC,cAAc,oBACnCc,EAAmBgB,kBAAoB,GACvCf,EAAQgB,UAAUC,IAAI,a,kDAG1BC,QAAQC,IAAGZ,EAAAa,I,2DAlBY/B,MAAAC,KAAAC,U,CAsB/B,SAASiC,IACLzC,EAAQiC,UAAUS,OAAO,cACzBvC,EAAM8B,UAAUC,IAAI,cACpBI,G,CASJG,IACAzC,EAAQ2C,iBAAiB,SAPzB,WACI3C,EAAQiC,UAAUC,IAAI,cACtB/B,EAAM8B,UAAUS,OAAO,cACvBtC,G,IAKJD,EAAMwC,iBAAiB,QAASF,G,WC/DhC,IAAMG,EAAO,CACTC,aAAc5C,SAASC,cAAc,qBACrC4C,cAAe7C,SAASC,cAAc,sBACtC6C,MAAO9C,SAASC,cAAc,gBAC9B8C,KAAM/C,SAASC,cAAc,SAYjC,SAAS+C,IAeL,IAZiF,GAFvEC,OAAOC,SAASC,KAElBC,QAAQ,+DACZH,OAAOC,SAASG,QAAO,GAE3BV,EAAKI,KAAKf,UAAUS,OAAO,YAC3BQ,OAAOK,oBAAoB,UAAWC,GACtCZ,EAAKG,MAAMd,UAAUC,IAAI,cAMZjC,SAASC,cAAc,WACzB,CACP,IAAMuD,EAAUxD,SAASC,cAAc,YACjCwD,EAAQzD,SAASC,cAAc,UAEjCuD,EAAQxB,UAAU0B,SAAS,eAC3BvD,IAEAsD,EAAMzB,UAAU0B,SAAS,eACzBrB,G,EAWZ,SAASkB,EAAWI,GACF,WAAVA,EAAEC,KACFZ,G,CA7CRL,EAAKG,MAAMJ,iBAAiB,SAqC5B,SAAyBiB,GACjBA,EAAEE,gBAAkBF,EAAEG,QACtBd,G,IAtCRC,OAAOP,iBAAiB,UAAWa,G","sources":["src/js/get-content/my-lib-btn-clicks.js","src/js/modal-windows/open-close-my_lib-movie-modal.js"],"sourcesContent":["import { oneCardMarkup } from '../components/one-card-markup'\nimport { getTheMoviesTargetInfo } from \"./get-movies-target-info\"\n\nconst watched = document.querySelector('#watched')\nconst queue = document.querySelector('#queue')\n\nasync function loadWatchedMovies() {\n    let watchedMoviesIds = localStorage.getItem(\"watched\")\n    if (!watchedMoviesIds) { watchedMoviesIds = {} }\n    else { watchedMoviesIds = JSON.parse(watchedMoviesIds) }\n\n    try {\n        const filmsToRender = await getTheMoviesTargetInfo(watchedMoviesIds)\n        const markup = filmsToRender.map(film => {\n            return oneCardMarkup(film)\n        }).join('');\n\n        const containerMyLibPage = document.querySelector('.film-grid');\n        containerMyLibPage.innerHTML = markup\n        const message = document.querySelector('.message-wrapper')\n        if (containerMyLibPage.childElementCount > 0) {\n            message.classList.add('hide-load');\n        }\n    \n    } catch (error) {\n        console.log(error)\n    }\n}\n\nasync function loadQueuedMovies() {    \n    let queuedMoviesIds = localStorage.getItem(\"queue\")\n    if (!queuedMoviesIds) { queuedMoviesIds = {} }\n    else { queuedMoviesIds = JSON.parse(queuedMoviesIds) }\n\n    try {\n        const filmsToRender = await getTheMoviesTargetInfo(queuedMoviesIds)\n        const markup = filmsToRender.map(film => {\n            return oneCardMarkup(film)\n        }).join('');\n\n        const containerMyLibPage = document.querySelector('.film-grid');\n        containerMyLibPage.innerHTML = markup\n        const message = document.querySelector('.message-wrapper')\n        if (containerMyLibPage.childElementCount > 0) {\n            message.classList.add('hide-load');\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nfunction onQueue () {\n    watched.classList.remove('active-btn')\n    queue.classList.add('active-btn')\n    loadQueuedMovies()\n}\n\nfunction onWatched () {\n    watched.classList.add('active-btn')\n    queue.classList.remove('active-btn')\n    loadWatchedMovies()\n}\n\nonQueue()\nwatched.addEventListener('click', onWatched)\nqueue.addEventListener('click', onQueue)\n\nexport { loadQueuedMovies, loadWatchedMovies, }","import { loadWatchedMovies, loadQueuedMovies } from \"../get-content/my-lib-btn-clicks\";\n\nconst refs = {\n    openModalBtn: document.querySelector('[data-modal-open]'),\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n    body: document.querySelector('body'),\n};\n\nrefs.modal.addEventListener('click', onBackdropClick);\nwindow.addEventListener('keydown', onEscClose);\n\nfunction showModalMovieWindow() {\n    refs.body.classList.add('overflow');\n    window.addEventListener('keydown', onEscClose);\n    refs.modal.classList.remove('is-hidden');\n}\n\nfunction hideModalMovieWindow() {\n    let url = window.location.href;\n    if (\n        url.indexOf('https://peteryurich.github.io/filmoteka_08/my_library.html') != -1) {\n        window.location.reload(true);\n    }\n    refs.body.classList.remove('overflow');\n    window.removeEventListener('keydown', onEscClose);\n    refs.modal.classList.add('is-hidden');\n\n    // if (url.indexOf('http://localhost:1234/my_library.html') != -1) {\n    //   window.location.reload(true);\n    // }\n\n    const form = document.querySelector(\".search\")\n    if (!form) {\n        const watched = document.querySelector('#watched')\n        const queue = document.querySelector('#queue')\n\n        if (watched.classList.contains(\"active-btn\")) {\n            loadWatchedMovies()\n        }\n        if (queue.classList.contains(\"active-btn\")) {\n            loadQueuedMovies()\n        }\n    }\n}\n\nfunction onBackdropClick(e) {\n    if (e.currentTarget === e.target) {\n        hideModalMovieWindow();\n    }\n}\n\nfunction onEscClose(e) {\n    if (e.key === 'Escape') {\n        hideModalMovieWindow();\n    }\n}\n\nexport { showModalMovieWindow, hideModalMovieWindow }"],"names":["$bpxeT","parcelRequire","$bcabdb5f54ab5d52$var$watched","document","querySelector","$bcabdb5f54ab5d52$var$queue","$bcabdb5f54ab5d52$export$f99fab56a46c62ee","$bcabdb5f54ab5d52$var$_loadWatchedMovies","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","watchedMoviesIds","filmsToRender","markup","containerMyLibPage","message","localStorage","getItem","JSON","parse","$8VB7B","getTheMoviesTargetInfo","_ctx","sent","map","film","$cGXL9","oneCardMarkup","join","innerHTML","childElementCount","classList","add","console","log","t0","$bcabdb5f54ab5d52$export$1c35a62a60101ee","$bcabdb5f54ab5d52$var$_loadQueuedMovies","queuedMoviesIds","$bcabdb5f54ab5d52$var$onQueue","remove","addEventListener","$f5f6a4376c89b822$var$refs","openModalBtn","closeModalBtn","modal","body","$f5f6a4376c89b822$export$cc81713dc4c30e0c","window","location","href","indexOf","reload","removeEventListener","$f5f6a4376c89b822$var$onEscClose","watched","queue","contains","e","key","currentTarget","target"],"version":3,"file":"my_library.7bd8c115.js.map"}