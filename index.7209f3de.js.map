{"mappings":"iiBAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,aCAA,SAASE,EAAcC,GACrB,MAAO,oHAICC,OADqCD,EAAKE,GAAG,0CAGTD,OAFpCD,EAAKG,WACN,mDAI8BF,OAHOD,EAAKG,WAAW,sFAMhDF,OAHyBD,EAAKI,MAAM,6EAMpCH,OAHAD,EAAKK,OAAO,wEAMZJ,OAHAK,OAAOC,SAASP,EAAKQ,aAAa,uEAGtBP,OAAZD,EAAKS,OAAO,4D,+BDZpBC,EAAc,IAAI,EAAAC,EAAAC,Y,SAETC,I,OAAAA,EAAfC,EAAAhB,EAAA,CAAAgB,EAAAC,GAAAC,MAAA,SAAAC,EAAmCC,EAAWC,G,IAGhCC,EAEAC,EACAC,EACAC,EAEAC,E,2FANiBd,EAAYe,mBAAmBP,EAAWC,G,cAA3DC,EAAQM,EAAAC,KAERN,EAAcD,EAASQ,QACvBN,EAAiBD,EAAYQ,KAAI,SAAA7B,G,OAAQA,EAAKE,E,cACxB,EAAA4B,EAAAC,wBAAuBT,G,cAA7CC,EAAaG,EAAAC,K,UAEEJ,EAAcM,KAAI,SAAA7B,GACnC,OAAOD,EAAcC,E,IACtBgC,KAAK,I,QAFFR,EAAME,EAAAC,KAIcM,SAASC,cAAc,cAC/BC,UAAYX,E,kDAE9BY,QAAQC,IAAGX,EAAAY,I,2DAhBeC,MAAAC,KAAAC,U,WAACvB,EAAWC,GAA/BN,EAAmB0B,MAAAC,KAAAC,U,CAoBlCC,CAzBkB,QACC,OELnB5C,EAAAD,EAAA,S,uCAAA,I,aAKM8C,EAAc,IAAI,EAAAhC,EAAAC,Y,SAETgC,I,OAAAA,EAAf9B,EAAAhB,EAAA,CAAAgB,EAAAC,GAAAC,MAAA,SAAAC,EAAmC4B,G,IAE3BC,EAMAC,EAIE3B,EACAC,EACAC,EACAC,EAEAC,E,yEAhBRqB,EAAEG,kBACIF,EAAoBb,SAASC,cAAc,eAC/BC,UAAY,IAC9B,EAAAc,EAAAC,cAEAC,QAAUlB,SAASC,cAAc,UAE3Ba,EAAQI,QAAQC,MACJ,Q,mBAGOT,EAAYU,qBAAqBN,EAHxC,S,eAGV3B,EAAQM,EAAAC,KACRN,EAAcD,EAASQ,QACvBN,EAAiBD,EAAYQ,KAAI,SAAA7B,G,OAAQA,EAAKE,E,eACxB,EAAA4B,EAAAC,wBAAuBT,G,eAA7CC,EAAaG,EAAAC,K,UAEEJ,EAAcM,KAAI,SAAA7B,GACrC,OAAOD,EAAcC,E,IACpBgC,KAAK,I,QAFFR,EAAME,EAAAC,MAIZ,EAAAsB,EAAAK,cACAR,EAAkBX,UAAYX,E,kDAE9BY,QAAQC,IAAGX,EAAAY,I,2DAxBmBC,MAAAC,KAAAC,U,CA4BrBR,SAASC,cAAc,gBAC/BqB,iBAAiB,U,SA7BaV,G,OAApBD,EAAmBL,MAAAC,KAAAC,U","sources":["src/index.js","src/js/load-pop-movies.js","src/js/oneCardMarkup.js","src/js/load-requested-movies.js"],"sourcesContent":["import \"./js/loader\"\nimport \"./js/load-pop-movies\"\nimport \"./js/load-requested-movies\"\n\nimport \"./js/open-modal-window\"\nimport \"./js/modal-footer-window\"\nimport \"./js/load-clicked-movie\"","import { oneCardMarkup } from './oneCardMarkup';\nimport { TheMovieDb } from \"./fetch\";\nimport { getTheMoviesTargetInfo } from \"./get-target-movies\"\n\nconst mediaType = \"movie\"\nconst timeWindow = \"day\"\n\nconst fetchMovies = new TheMovieDb();\n\nasync function loadRequestedMovies(mediaType, timeWindow) {\n\n    try {\n        const ApiReply = await fetchMovies.fetchPopularMovies(mediaType, timeWindow);\n\n        const foundMovies = ApiReply.results\n        const foundMoviesIds = foundMovies.map(film => film.id)\n        const FilmsToRender = await getTheMoviesTargetInfo(foundMoviesIds)\n\n        const markup = await FilmsToRender.map(film => {\n            return oneCardMarkup(film)\n        }).join('');\n\n        const containerMainPage = document.querySelector('.film-grid');\n        containerMainPage.innerHTML = markup\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nloadRequestedMovies(mediaType, timeWindow)","function oneCardMarkup(film) {\n  return `\n    <div class=\"photo-card\" \">\n    <a class=\"photo-card__link\">\n        <img class=\"photo-card-img\" data-id=\"${film.id}\" src=\"https://image.tmdb.org/t/p/w500${\n          film.posterPath\n        }\"\n        alt=\"https://image.tmdb.org/t/p/w500${film.posterPath}\" />\n    </a>\n    <div class=\"card-info\">\n        <h3 class=\"card-info__title\">${film.title}</h3>\n        <p>\n        <span class=\"card-info__genre\">\n            ${film.genres}\n        </span>\n        <span class=\"release-date\">\n            ${Number.parseInt(film.releaseYear)}\n        </span>\n        <span class=\"film-rating\">\n            ${film.rating}\n        </span>\n        </p>\n    </div>\n    </div>\n`;\n}\nexport { oneCardMarkup };\n","import { oneCardMarkup } from './oneCardMarkup';\nimport { TheMovieDb } from './fetch';\nimport { getTheMoviesTargetInfo } from './get-target-movies';\nimport { showLoader, hideLoader } from './loader';\n\nconst fetchMovies = new TheMovieDb();\n\nasync function loadRequestedMovies(e) {\n  e.preventDefault();\n  const containerMainPage = document.querySelector('.film-grid');\n  containerMainPage.innerHTML = '';\n  showLoader();\n\n  inputEl = document.querySelector('.input');\n\n  const query = inputEl.value;\n  const mediaType = 'movie';\n\n  try {\n    const ApiReply = await fetchMovies.fetchRequestedMovies(query, mediaType);\n    const foundMovies = ApiReply.results;\n    const foundMoviesIds = foundMovies.map(film => film.id);\n    const FilmsToRender = await getTheMoviesTargetInfo(foundMoviesIds);\n\n    const markup = await FilmsToRender.map(film => {\n      return oneCardMarkup(film);\n    }).join('');\n\n    hideLoader();\n    containerMainPage.innerHTML = markup;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst form = document.querySelector('.search-form');\nform.addEventListener('submit', loadRequestedMovies);\n"],"names":["parcelRequire","$bpxeT","$df369320ca9c7b71$export$a70351ab6f3e52f5","film","concat","id","posterPath","title","genres","Number","parseInt","releaseYear","rating","$e9135f45477d4946$var$fetchMovies","$5g02X","TheMovieDb","$e9135f45477d4946$var$_loadRequestedMovies","$parcel$interopDefault","$2TvXO","mark","_callee","mediaType1","timeWindow1","ApiReply","foundMovies","foundMoviesIds","FilmsToRender","markup","fetchPopularMovies","_ctx","sent","results","map","$9B4jB","getTheMoviesTargetInfo","join","document","querySelector","innerHTML","console","log","t0","apply","this","arguments","$e9135f45477d4946$var$loadRequestedMovies","$cfa9954cdb7e7083$var$fetchMovies","$cfa9954cdb7e7083$var$_loadRequestedMovies","e","containerMainPage","query","preventDefault","$kvC6y","showLoader","inputEl","value","fetchRequestedMovies","hideLoader","addEventListener"],"version":3,"file":"index.7209f3de.js.map"}