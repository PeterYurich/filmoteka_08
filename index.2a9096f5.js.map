{"mappings":"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","sources":["src/index.js","src/js/load-pop-movies.js","src/js/load-pop-clicked-page.js","src/js/make-pop-pagination-markup.js","src/js/load-requested-movies.js","src/js/load-requested-clicked-page.js","src/js/make-requested-pagination-markup.js"],"sourcesContent":["import './js/loader';\nimport './js/load-pop-movies';\nimport './js/load-requested-movies';\n\n\nimport './js/open-close-movie-modal';\nimport './js/load-clicked-movie';\nimport './js/modal-footer-window';\n\nclass Asd {\n    constructor({a}) {\n        this.a = a;\n        this.b = \"lkn\";\n        this.c = 3;\n    }\n} \n\nconst df = 5\n\nconst qwe = new Asd({a: df})\n\n","import { oneCardMarkup } from './one-card-markup';\nimport { TheMovieDb } from './fetch';\nimport { getTheMoviesTargetInfo } from './get-movies-target-info';\nimport { makePopPaginationMarkup } from './make-pop-pagination-markup';\n\nconst fetchMovies = new TheMovieDb()\n\nasync function loadPopMovies() {\n    try {\n        const ApiReply = await fetchMovies.fetchPopularMovies(\"1\");\n\n        const foundMovies = ApiReply.results;\n        const foundMoviesIds = foundMovies.map(film => film.id);\n        const filmsToRender = await getTheMoviesTargetInfo(foundMoviesIds);\n\n        const markup = await filmsToRender.map(film => {\n            return oneCardMarkup(film);\n        }).join('');\n\n        const containerMainPage = document.querySelector('.film-grid');\n        containerMainPage.innerHTML = markup;\n\n        makePopPaginationMarkup(ApiReply)\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nloadPopMovies();","import { TheMovieDb } from \"./fetch.js\"\nimport { oneCardMarkup } from './one-card-markup';\nimport { getTheMoviesTargetInfo } from './get-movies-target-info';\nimport { makePopPaginationMarkup, paginationWrapper } from './make-pop-pagination-markup';\n\nasync function loadPopClickedPage(e) {\n    e.preventDefault();\n\n    const clickedPage = e.target.textContent;\n    const fetchMovies = new TheMovieDb()\n\n    paginationWrapper.innerHTML = '';\n\n    try {\n        const ApiReply = await fetchMovies.fetchPopularMovies(clickedPage);\n\n        const foundMovies = ApiReply.results;\n        const foundMoviesIds = foundMovies.map(film => film.id);\n        const FilmsToRender = await getTheMoviesTargetInfo(foundMoviesIds);\n\n        const markup = await FilmsToRender.map(film => {\n            return oneCardMarkup(film);\n        }).join('');\n\n        const containerMainPage = document.querySelector('.film-grid');\n        containerMainPage.innerHTML = markup;\n\n        makePopPaginationMarkup(ApiReply);\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport { loadPopClickedPage }\n","import { loadPopClickedPage } from \"./load-pop-clicked-page\"\nconst paginationWrapper = document.getElementById('pagination');\n\nfunction makePopPaginationMarkup(ApiReply) {\n    paginationWrapper.innerHTML = '';\n    const pageAmount = ApiReply.total_pages;\n    const currentPage = ApiReply.page\n\n    // початок сторінок\n    if (currentPage === 1) {\n        for (let i = currentPage; i < currentPage + 5; i++) {\n            paginationWrapper.insertAdjacentHTML(\"beforeend\", `<button class=\"page-button\">${i}</button>`)\n        }\n    }\n\n    // кінець сторінок\n    if (currentPage === pageAmount) {\n        for (let i = currentPage - 4; i < currentPage; i++) {\n            paginationWrapper.insertAdjacentHTML(\"beforeend\", `<button class=\"page-button\">${i}</button>`)\n        }\n    } else if (currentPage === pageAmount - 1) {\n        for (let i = currentPage - 3; i < currentPage + 1; i++) {\n            paginationWrapper.insertAdjacentHTML(\"beforeend\", `<button class=\"page-button\">${i}</button>`)\n        }\n    } else if (currentPage === pageAmount - 2) {\n        for (let i = currentPage - 2; i < currentPage + 2; i++) {\n            paginationWrapper.insertAdjacentHTML(\"beforeend\", `<button class=\"page-button\">${i}</button>`)\n        }\n    }\n\n    // середина сторінок (за замовчуванням)\n    if (currentPage >= 2 && currentPage <= pageAmount - 3) {\n        for (let i = currentPage - 1; i < currentPage + 4; i++) {\n            paginationWrapper.insertAdjacentHTML(\"beforeend\", `<button class=\"page-button\">${i}</button>`)\n        }\n    }\n\n    const buttons = document.querySelectorAll(\".page-button\")\n\n    for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].textContent == ApiReply.page) {\n            //якщо поточна сторінка дорівнює конкретної сторінкі масиву\n            buttons[i].classList.add(\"btn-active\");\n        }\n    }\n    paginationWrapper.addEventListener(\"click\", loadPopClickedPage)\n\n}\n\n// function addRequestListener() {\n//     paginationWrapper.addEventListener(\"click\", loadRequestedClickedPage)\n// }\n\n\n\nexport { makePopPaginationMarkup, paginationWrapper }\n","import { oneCardMarkup } from './one-card-markup';\nimport { TheMovieDb } from './fetch';\nimport { getTheMoviesTargetInfo } from './get-movies-target-info';\nimport { showLoader, hideLoader } from './loader';\nimport {makeRequestedPaginationMarkup} from './make-requested-pagination-markup'\n\nconst fetchMovies = new TheMovieDb();\n\nconst page = 1\n\nasync function loadRequestedMovies(e) {\n    e.preventDefault();\n    const containerMainPage = document.querySelector('.film-grid');\n    containerMainPage.innerHTML = '';\n    showLoader();\n\n    inputEl = document.querySelector('.input');\n\n    const query = inputEl.value;\n\n    try {\n        const ApiReply = await fetchMovies.fetchRequestedMovies(query, page);\n        const foundMovies = ApiReply.results;\n        if (foundMovies.length === 0) {\n            alert(`the film \"${query} is not exist`)\n        }\n        const foundMoviesIds = foundMovies.map(film => film.id);\n        const filmsToRender = await getTheMoviesTargetInfo(foundMoviesIds);\n\n        const markup = await filmsToRender.map(film => {\n            return oneCardMarkup(film);\n        }).join('');\n\n        hideLoader();\n        containerMainPage.innerHTML = markup;\n        makeRequestedPaginationMarkup(ApiReply)\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nconst form = document.querySelector('.search-form');\nform.addEventListener('submit', loadRequestedMovies);\n","import { oneCardMarkup } from './one-card-markup';\nimport { TheMovieDb } from './fetch';\nimport { getTheMoviesTargetInfo } from './get-movies-target-info';\nimport { showLoader, hideLoader } from './loader';\nimport { makeRequestedPaginationMarkup } from './make-requested-pagination-markup';\n\n\nasync function loadRequestedClickedPage(e) {\n    e.preventDefault();\n\n    const clickedPage = e.target.textContent;\n    const fetchMovies = new TheMovieDb();\n\n    const containerMainPage = document.querySelector('.film-grid');\n    containerMainPage.innerHTML = '';\n    showLoader();\n\n    inputEl = document.querySelector('.input');\n\n    const query = inputEl.value;\n\n    try {\n        const ApiReply = await fetchMovies.fetchRequestedMovies(query, clickedPage);\n// console.log(ApiReply)\n        const foundMovies = ApiReply.results;\n        const foundMoviesIds = foundMovies.map(film => film.id);\n        const filmsToRender = await getTheMoviesTargetInfo(foundMoviesIds);\n\n        const markup = await filmsToRender.map(film => {\n            return oneCardMarkup(film);\n        }).join('');\n\n        hideLoader();\n        containerMainPage.innerHTML = markup;\n\n        makeRequestedPaginationMarkup(ApiReply)\n        // addRequestListener()\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport { loadRequestedClickedPage }","import { loadRequestedClickedPage } from \"./load-requested-clicked-page\"\n\nconst paginationWrapper = document.getElementById('pagination');\n\nfunction makeRequestedPaginationMarkup(ApiReply) {\n    paginationWrapper.innerHTML = '';\n    const pageAmount = ApiReply.total_pages;\n    const currentPage = ApiReply.page\n\n    // початок сторінок\n    if (currentPage === 1) {\n        for (let i = currentPage; i < currentPage + 5; i++) {\n            paginationWrapper.insertAdjacentHTML(\"beforeend\", `<button class=\"page-button\">${i}</button>`)\n        }\n    }\n\n    // кінець сторінок\n    if (currentPage === pageAmount) {\n        for (let i = currentPage - 4; i < currentPage; i++) {\n            paginationWrapper.insertAdjacentHTML(\"beforeend\", `<button class=\"page-button\">${i}</button>`)\n        }\n    } else if (currentPage === pageAmount - 1) {\n        for (let i = currentPage - 3; i < currentPage + 1; i++) {\n            paginationWrapper.insertAdjacentHTML(\"beforeend\", `<button class=\"page-button\">${i}</button>`)\n        }\n    } else if (currentPage === pageAmount - 2) {\n        for (let i = currentPage - 2; i < currentPage + 2; i++) {\n            paginationWrapper.insertAdjacentHTML(\"beforeend\", `<button class=\"page-button\">${i}</button>`)\n        }\n    }\n\n    // середина сторінок (за замовчуванням)\n    if (currentPage >= 2 && currentPage <= pageAmount - 3) {\n        for (let i = currentPage - 1; i < currentPage + 4; i++) {\n            paginationWrapper.insertAdjacentHTML(\"beforeend\", `<button class=\"page-button\">${i}</button>`)\n        }\n    }\n\n    // якщо мало\n    if (pageAmount === 1) {\n        paginationWrapper.innerHTML = '';\n    } else if (pageAmount >= 2 && pageAmount <= 10) {\n        paginationWrapper.innerHTML = '';\n\n        for (let i = 1; i < pageAmount; i++) {\n            paginationWrapper.insertAdjacentHTML(\"beforeend\", `<button class=\"page-button\">${i}</button>`)\n        }\n    }\n\n    const buttons = document.querySelectorAll(\".page-button\")\n\n    for (let i = 0; i < buttons.length; i++) {\n        if (buttons[i].textContent == ApiReply.page) {\n            //якщо поточна сторінка дорівнює конкретної сторінкі масиву\n            buttons[i].classList.add(\"btn-active\");\n        }\n    }\n    // paginationWrapper.addEventListener(\"click\", loadPopClickedPage)\n    paginationWrapper.addEventListener(\"click\", loadRequestedClickedPage)\n\n}\n\nexport { makeRequestedPaginationMarkup }\n"],"names":["$8MBJY","parcelRequire","$bpxeT","$1aa99770960f6503$export$2040a98360ce4f79","e","$1aa99770960f6503$var$_loadPopClickedPage","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","clickedPage","fetchMovies","ApiReply","foundMovies","foundMoviesIds","FilmsToRender","markup","preventDefault","target","textContent","$5g02X","TheMovieDb","$24bd535283a69825$export$2304dc97c2330b66","innerHTML","fetchPopularMovies","_ctx","sent","results","map","film","id","$eVfoQ","getTheMoviesTargetInfo","$fl036","oneCardMarkup","join","document","querySelector","$24bd535283a69825$export$cc94cbd10d3a3904","console","log","t0","getElementById","pageAmount","total_pages","currentPage","page","i","insertAdjacentHTML","concat","i1","i2","i3","i4","buttons","querySelectorAll","i5","length","classList","add","addEventListener","$e9135f45477d4946$var$fetchMovies","$e9135f45477d4946$var$_loadPopMovies","filmsToRender","$e9135f45477d4946$var$loadPopMovies","$5903c4f11f510866$export$13a130d6db9f7f4e","$5903c4f11f510866$var$_loadRequestedClickedPage","containerMainPage","query","$kvC6y","showLoader","inputEl","value","fetchRequestedMovies","hideLoader","$d38b55f7678ab6f9$export$ab3e04bc349ba1b2","$d38b55f7678ab6f9$var$paginationWrapper","i6","$cfa9954cdb7e7083$var$fetchMovies","$cfa9954cdb7e7083$var$_loadRequestedMovies","alert","Asd","param","a","b","c"],"version":3,"file":"index.2a9096f5.js.map"}